import streamlit as st
from core.database import get_db_connection, authenticate_user, get_user_by_id
from streamlit_cookies_manager import CookieManager

st.set_page_config(
    page_title="–ì–ª–∞–≤–Ω–∞—è",
    page_icon="üëã",
    layout="wide"
)

# Initialize session state for login
if 'logged_in' not in st.session_state: st.session_state.logged_in = False
if 'user_role' not in st.session_state: st.session_state.user_role = None
if 'user_nickname' not in st.session_state: st.session_state.user_nickname = None
if 'user_login' not in st.session_state: st.session_state.user_login = None
if 'user_id' not in st.session_state: st.session_state.user_id = None

conn = get_db_connection()
cookies = CookieManager()

# Auto-login from URL query parameter or cookie
if not st.session_state.logged_in:
    user_id_from_cookie = cookies.get('user_id')
    
    user_id_to_check = None

    # Prioritize cookie over URL query param for auto-login
    if user_id_from_cookie and user_id_from_cookie.isdigit():
        user_id_to_check = int(user_id_from_cookie)
    else:
        query_params = st.query_params
        if "user_id" in query_params and query_params["user_id"][0].isdigit():
            user_id_to_check = int(query_params["user_id"][0])

    if user_id_to_check:
        user = get_user_by_id(conn, user_id_to_check)
        if user and user['status'] == 'active':
            st.session_state.logged_in = True
            st.session_state.user_role = user['role']
            st.session_state.user_nickname = user['nickname']
            st.session_state.user_login = user['login']
            st.session_state.user_id = user['id']
            st.success(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['nickname']}!")
            # Ensure cookie is set if auto-logged in via URL
            if not user_id_from_cookie:
                cookies['user_id'] = str(user['id'])
                cookies.save()
        else:
            # Clear invalid user_id from cookie and URL
            if user_id_from_cookie:
                cookies.delete('user_id')
                cookies.save()
            if "user_id" in st.query_params:
                del st.query_params["user_id"]

def login_user(username, password, remember_me):
    user = authenticate_user(conn, username, password)
    if user:
        if user['status'] == 'active':
            st.session_state.logged_in = True
            st.session_state.user_role = user['role']
            st.session_state.user_nickname = user['nickname']
            st.session_state.user_login = user['login']
            st.session_state.user_id = user['id']
            st.success(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user['nickname']}!")
            if remember_me:
                cookies['user_id'] = str(user['id'])
                cookies.save()
            else:
                del cookies['user_id']
                cookies.save()
            st.rerun()
        else:
            st.error("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    else:
        st.error("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")

def logout_user():
    st.session_state.logged_in = False
    st.session_state.user_role = None
    st.session_state.user_nickname = None
    st.session_state.user_login = None
    st.session_state.user_id = None
    del cookies['user_id'] # Clear user_id from cookie
    cookies.save()
    if "user_id" in st.query_params: # Also clear from URL if present
        del st.query_params["user_id"]
    st.info("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")

if not st.session_state.logged_in:
    st.title("–í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    login = st.text_input("–õ–æ–≥–∏–Ω")
    password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
    remember_me = st.checkbox("–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è")
    if st.button("–í–æ–π—Ç–∏"):
        login_user(login, password, remember_me)
else:
    st.title(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {st.session_state.user_nickname}!")
    st.sidebar.success("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ä–∞–±–æ—Ç—ã.")

    # Conditional page links
    if st.session_state.logged_in:
        st.sidebar.page_link("pages/_Phrase_Filtration.py", label="Phrase Filtration", icon="üîç")
        if st.session_state.user_role == 'admin':
            st.sidebar.page_link("pages/_Admin_Panel.py", label="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", icon="‚öôÔ∏è")

    st.markdown(
        """
        –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö n-–≥—Ä–∞–º–º.

        **üëà –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞**, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.

        ### –ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å?
        - **–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ—Ä–∞–∑:** –ö–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—Ä–∞–∑ –ø–æ –ª–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º.
        - **–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:** –ò–∑—É—á–∞–π—Ç–µ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç—å —Å–ª–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö –≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑–∞—Ö.
        """
    )
    st.sidebar.button("–í—ã–π—Ç–∏", on_click=logout_user)
